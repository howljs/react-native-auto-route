"use strict";(self.webpackChunkauto_route=self.webpackChunkauto_route||[]).push([[181],{7816:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var o=t(5893),a=t(1151),r=t(2004),i=t.n(r);const s={sidebar_position:2},c="Opening a modal",l={id:"guides/modal",title:"Opening a modal",description:"A modal displays content that temporarily blocks interactions with the main view.",source:"@site/docs/guides/modal.mdx",sourceDirName:"guides",slug:"/guides/modal",permalink:"/react-native-auto-route/docs/guides/modal",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Authentication flows",permalink:"/react-native-auto-route/docs/guides/auth-flows"},next:{title:"Deep linking",permalink:"/react-native-auto-route/docs/guides/deep-linking"}},u={},d=[{value:"Example",id:"example",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"opening-a-modal",children:"Opening a modal"}),"\n",(0,o.jsx)(n.p,{children:"A modal displays content that temporarily blocks interactions with the main view."}),"\n",(0,o.jsx)(n.p,{children:"A modal is like a popup \u2014 it usually has a different transition animation, and is intended to focus on one particular interaction or piece of content."}),"\n",(0,o.jsx)(i(),{playing:!0,controls:!0,url:"/react-native-auto-route/img/modal.mp4"}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\ud83d\udcc2 app\n\u2503 \u2523 \ud83d\udcdc _layout.tsx\n\u2503 \u2523 \ud83d\udcdc index.tsx\n\u2503 \u2523 \ud83d\udcdc picker-3.tsx\n\u2503 \u2523 \ud83d\udcc2 (modal)\n\u2503 \u2503 \u2517 \ud83d\udcdc _layout.tsx\n\u2503 \u2503 \u2517 \ud83d\udcdc picker.tsx\n\u2503 \u2503 \u2517 \ud83d\udcdc picker-2.tsx\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",metastring:'title="app/_layout.tsx"',children:"import React from 'react';\nimport {Stack} from 'react-native-auto-route';\n\nconst RootLayout = () => {\n  return (\n    <Stack initialRouteName=\"index\">\n      <Stack.Screen name=\"index\" />\n      <Stack.Screen\n        name=\"(modal)\"\n        // Set presentation to 'modal' for modal group\n        // highlight-next-line\n        options={{headerShown: false, presentation: 'modal'}}\n      />\n      <Stack.Screen name=\"picker-3\" options={{\n          // Set presentation to 'modal' for screen\n          // highlight-next-line\n          presentation: 'modal'\n        }} \n      />\n    </Stack>\n  );\n};\n\nexport default RootLayout;\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",metastring:'title="app/(modal)/_layout.tsx"',children:"import React from 'react';\nimport {Text, TouchableOpacity} from 'react-native';\nimport {Stack, useRouter} from 'react-native-auto-route';\n\nconst ModalLayout = () => {\n  const router = useRouter();\n  const _renderClose = () => (\n    <TouchableOpacity onPress={router.back}>\n      <Text>Close</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <Stack\n      screenOptions={{\n        // Show close button in header for all screens in modal group\n        headerRight: _renderClose,\n      }}\n    />\n  );\n};\n\nexport default ModalLayout;\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",metastring:'title="app/index.tsx"',children:"import React from 'react';\nimport {Button, Text, View} from 'react-native';\nimport {useRouter} from 'react-native-auto-route';\n\nconst Home = () => {\n  const router = useRouter();\n\n  return (\n    <View>\n      <Text>Home</Text>\n      <Button\n        title=\"Picker 1\"\n        onPress={() => {\n          router.push('picker');\n        }}\n      />\n      <Button\n        title=\"Picker 2\"\n        onPress={() => {\n          router.push('picker-2');\n        }}\n      />\n      <Button\n        title=\"Picker 3\"\n        onPress={() => {\n          router.push('picker-3');\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Home;\n\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);