"use strict";(self.webpackChunkauto_route=self.webpackChunkauto_route||[]).push([[169],{7736:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var o=n(5893),r=n(1151);const i={sidebar_position:3},s="Moving between screens",a={id:"moving-between-screens",title:"Moving between screens",description:"Navigating to a new screen",source:"@site/docs/moving-between-screens.md",sourceDirName:".",slug:"/moving-between-screens",permalink:"/docs/moving-between-screens",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Create screens",permalink:"/docs/create-screens"},next:{title:"Layout routes",permalink:"/docs/layout-routes"}},c={},u=[{value:"Navigating to a new screen",id:"navigating-to-a-new-screen",level:2},{value:"Navigate to a route multiple times",id:"navigate-to-a-route-multiple-times",level:2},{value:"Going back",id:"going-back",level:2},{value:"Going back to the first screen in the stack.",id:"going-back-to-the-first-screen-in-the-stack",level:2},{value:"Other properties of the <code>router</code>",id:"other-properties-of-the-router",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"moving-between-screens",children:"Moving between screens"}),"\n",(0,o.jsx)(t.h2,{id:"navigating-to-a-new-screen",children:"Navigating to a new screen"}),"\n",(0,o.jsxs)(t.p,{children:["To navigate to a new screen, use the ",(0,o.jsx)(t.code,{children:"useRouter"})," hook. This hook returns a navigation object that contains methods to navigate between screens."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",metastring:'title="app/home.tsx"',children:"import React from 'react';\nimport {Button, Text, View} from 'react-native';\nimport {useRouter} from 'react-native-auto-route';\n\nexport default function Home() {\n  const router = useRouter();\n  return (\n    <View>\n      <Text>Home</Text>\n      <Button\n        title=\"Go to Settings\"\n        // highlight-next-line\n        onPress={() => router.navigate('settings')}\n      />\n    </View>\n  );\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"navigate-to-a-route-multiple-times",children:"Navigate to a route multiple times"}),"\n",(0,o.jsxs)(t.p,{children:["To do this, we can change ",(0,o.jsx)(t.code,{children:"navigate"})," to ",(0,o.jsx)(t.code,{children:"push"}),". This allows us to express the intent to add another route regardless of the existing navigation history."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",metastring:'title="app/home.tsx"',children:"import React from 'react';\nimport {Button, Text, View} from 'react-native';\nimport {useRouter} from 'react-native-auto-route';\n\nexport default function Home() {\n  const route = useRouter();\n  return (\n    <View>\n      <Text>Home</Text>\n      <Button\n        title=\"Go to Settings\"\n        // highlight-next-line\n        onPress={() => route.navigate('settings')}\n      />\n    </View>\n  );\n}\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",metastring:'title="app/settings.tsx"',children:"import React from 'react';\nimport {Button, Text, View} from 'react-native';\nimport {useRouter} from 'react-native-auto-route';\n\nexport default function Settings() {\n  const route = useRouter();\n  return (\n    <View>\n      <Text>Settings</Text>\n      <Button\n        title=\"Go to Settings ...again\"\n        // highlight-next-line\n        onPress={() => route.push('settings')}\n      />\n    </View>\n  );\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"going-back",children:"Going back"}),"\n",(0,o.jsx)(t.p,{children:"To go back to the previous screen"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",metastring:'title="app/settings.tsx"',children:"import React from 'react';\nimport {Button, Text, View} from 'react-native';\nimport {useRouter} from 'react-native-auto-route';\n\nexport default function Settings() {\n  const router = useRouter();\n  return (\n    <View>\n      <Text>Settings</Text>\n      <Button\n        title=\"Go back\"\n        // highlight-next-line\n        onPress={() => router.back()}\n      />\n    </View>\n  );\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"going-back-to-the-first-screen-in-the-stack",children:"Going back to the first screen in the stack."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",metastring:'title="app/settings.tsx"',children:"import React from 'react';\nimport {Button, Text, View} from 'react-native';\nimport {useRouter} from 'react-native-auto-route';\n\nexport default function Settings() {\n  const route = useRouter();\n  return (\n    <View>\n      <Text>Settings</Text>\n      <Button\n        title=\"Go back\"\n        // highlight-next-line\n        onPress={() => route.popToTop()}\n      />\n    </View>\n  );\n}\n"})}),"\n",(0,o.jsxs)(t.h2,{id:"other-properties-of-the-router",children:["Other properties of the ",(0,o.jsx)(t.code,{children:"router"})]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"router"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"router.canGoBack"})," - Check if we can go back"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"router.isFocused"})," - Check if the current screen is focused"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"router.setParams"})," - Update the params of the current screen"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"router.setOptions"})," - Update the options of the current screen"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"router.pop"})," - The pop action takes you back to a previous screen in the stack. It takes one optional argument (count), which allows you to specify how many screens to pop back by."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>s});var o=n(7294);const r={},i=o.createContext(r);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);