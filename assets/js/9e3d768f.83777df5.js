"use strict";(self.webpackChunkauto_route=self.webpackChunkauto_route||[]).push([[147],{1275:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var s=n(5893),a=n(1151);const i={sidebar_position:5},r="State persistence",o={id:"guides/state-persistence",title:"State persistence",description:"References: State persistence",source:"@site/docs/guides/state-persistence.mdx",sourceDirName:"guides",slug:"/guides/state-persistence",permalink:"/react-native-auto-route/docs/guides/state-persistence",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Screen tracking for analytics",permalink:"/react-native-auto-route/docs/guides/screen-tracking"},next:{title:"Preventing going back",permalink:"/react-native-auto-route/docs/guides/preventing-going-back"}},c={},u=[];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"state-persistence",children:"State persistence"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["References: ",(0,s.jsx)(t.a,{href:"https://reactnavigation.org/docs/state-persistence/",children:"State persistence"})]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",metastring:'title="App.tsx"',children:"import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as React from 'react';\nimport {Linking, Platform} from 'react-native';\nimport RouterRoot from 'react-native-auto-route';\n\nconst PERSISTENCE_KEY = 'NAVIGATION_STATE_V1';\n\nexport default function App() {\n  const [isReady, setIsReady] = React.useState(false);\n  const [initialState, setInitialState] = React.useState();\n\n  React.useEffect(() => {\n    const restoreState = async () => {\n      try {\n        const initialUrl = await Linking.getInitialURL();\n\n        if (Platform.OS !== 'web' && initialUrl == null) {\n          // Only restore state if there's no deep link and we're not on web\n          const savedStateString = await AsyncStorage.getItem(PERSISTENCE_KEY);\n          const state = savedStateString\n            ? JSON.parse(savedStateString)\n            : undefined;\n\n          if (state !== undefined) {\n            setInitialState(state);\n          }\n        }\n      } finally {\n        setIsReady(true);\n      }\n    };\n\n    if (!isReady) {\n      restoreState();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    return null;\n  }\n\n  return (\n    <RouterRoot\n      initialState={initialState}\n      onStateChange={(_, navState) =>\n        AsyncStorage.setItem(PERSISTENCE_KEY, JSON.stringify(navState))\n      }\n    />\n  );\n}\n\n"})})]})}function l(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>r});var s=n(7294);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);